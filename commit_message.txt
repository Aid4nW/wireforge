feat: Implement custom component library with CRUD and drag-and-drop

This commit introduces the custom component library, allowing users to define, manage, and utilize their own components within the WireForge application:

- **Custom Component Management:**
    - Implemented `frontend/pages/my-library.tsx` as a dedicated page for managing custom components.
    - Developed `frontend/store/useCustomComponentStore.ts` (Zustand store) to handle custom component data, including persistence to local storage.
    - Provided full CRUD (Create, Read, Update, Delete) functionality for custom components on the 'My Library' page.
- **Integration with Component Library:**
    - Modified `frontend/components/ComponentLibrary.tsx` to dynamically display custom components alongside pre-defined ones.
- **Drag-and-Drop to Canvas:**
    - Enhanced `HarnessCanvas.tsx` to correctly interpret and instantiate custom components dragged from the component library, ensuring their defined pins are accurately represented.
- **Navigation and Styling:**
    - Added a navigation link to the 'My Library' page in `frontend/pages/_app.tsx` using `next/link`.
    - Applied appropriate styling in `frontend/styles/globals.css` for the new library page and its interactive elements.

All unit and end-to-end tests continue to pass, validating the new features and ensuring no regressions.